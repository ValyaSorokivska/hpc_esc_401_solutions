#!/usr/bin/env bash

set -euo pipefail

timer_start()  { _t0_ns=$(date +%s%N); }
timer_elapsed() {
  local t1_ns=$(date +%s%N)
  # requires 'bc' (already available on Eiger)
  awk -v t0="$_t0_ns" -v t1="$t1_ns" 'BEGIN{printf "Elapsed: %.3f s\n", (t1-t0)/1e9}'
}


err() { echo "ERROR: $*" >&2; exit 2; }


[[ $# -eq 1 ]] || err "Usage: $0 <positive integer>"

n="$1"

if ! [[ "$n" =~ ^-?[0-9]+([.][0-9]+)?$ ]]; then
  err "The given input is not a number: $n"
fi

if [[ "$n" =~ \. ]]; then
  err "The given input is not a positive integer: $n"
fi

if (( n <= 0 )); then
  err "The given input is not a positive integer: $n"
fi

if (( n == 1 )); then
  echo "1 is not prime"
  exit 0
fi

out="$(factor "$n")"         
fields="$(awk '{print NF}' <<<"$out")"


timer_start
out="$(factor "$n")"
fields="$(awk '{print NF}' <<<"$out")"

if (( fields == 2 )); then
  echo "$n is prime"
else
  echo "$n is composite"
fi

timer_elapsed
